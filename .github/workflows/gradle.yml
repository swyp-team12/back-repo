name: Deploy to NCP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get GitHub Action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Setting NCP CLI & Credentials
        run: |
          cd ~
          wget https://www.ncloud.com/api/support/download/files/cli/CLI_1.1.23_20241121.zip -O ncp-cli.zip
          unzip ncp-cli.zip
          mv CLI_1.1.23_20241121/cli_linux ~/ncp-cli
          chmod +x ~/ncp-cli/ncloud
          mkdir -p ~/.ncloud
          echo -e "[DEFAULT]\nncloud_access_key_id = ${{ secrets.NCP_ACCESS_KEY }}\nncloud_secret_access_key = ${{ secrets.NCP_SECRET_KEY }}\nncloud_api_url = ${{ secrets.NCP_API_URL }}" > ~/.ncloud/configure

      - name: Add GitHub Action IP to Security Group
        run: |
          chmod -R 777 ~/ncp-cli
          cd ~/ncp-cli
          ./ncloud vserver addAccessControlGroupInboundRule \
            --regionCode KR \
            --vpcNo ${{ secrets.NCP_VPC_NO }} \
            --accessControlGroupNo ${{ SECURITY_GROUP_ID }} \
            --accessControlGroupRuleList "protocolTypeCode='TCP', ipBlock='${{ steps.ip.outputs.ipv4 }}/32', portRange='${{ secrets.SSH_PORT }}'"

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ~/your_project_directory
            ./start.sh

      - name: Remove GitHub Action IP from Security Group
        run: |
          chmod -R 777 ~/ncp-cli
          cd ~/ncp-cli
          ./ncloud vserver removeAccessControlGroupInboundRule \
            --regionCode KR \
            --vpcNo ${{ SECURITY_GROUP_ID }} \
            --accessControlGroupNo ${{ SECURITY_GROUP_ID }} \
            --accessControlGroupRuleList "protocolTypeCode='TCP', ipBlock='${{ steps.ip.outputs.ipv4 }}/32', portRange='${{ secrets.SSH_PORT }}'"
